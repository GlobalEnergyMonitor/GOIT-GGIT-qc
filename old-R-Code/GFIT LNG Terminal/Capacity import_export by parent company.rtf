{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #Capacity import/export by company, prorated by ownership share\
\
term<-read.csv("terminals.csv", header=TRUE)\
term<-term[c(6,15,16,17)]\
owners<-read.csv("owners.csv", header=TRUE)\
owners<-merge(owners, term, by="ProjectID")\
owners<-subset(owners, owners$Type=="LNG")\
owners<-subset(owners, owners$Facility=="Export")\
owners[is.na(owners)] <- ""\
owners<-owners[c(1,2,4,7,10,13,16,19,22,25,28,31,6,9,12,15,18,21,24,27,30,33,36,37)]\
names(owners)[23]<-"CurrentCap"\
names(owners)[24]<-"PropCap"\
\
  owners10<-subset(owners, owners$Owner10!="" & owners$Percent10=="")\
  owners10[ , 13:22]<- 100/10\
  owners10[, 13:22] <- sapply(owners10[, 13:22],as.numeric)\
\
  owners9<-subset(owners, owners$Owner9!="" & owners$Percent9=="" & owners$Owner10=="")\
  owners9[ , 13:21]<- 100/9\
  owners9[, 13:22] <- sapply(owners9[, 13:22],as.numeric)\
\
  owners8<-subset(owners, owners$Owner8!="" & owners$Percent8=="" & owners$Owner9=="")\
  owners8[ , 13:20]<- 100/8\
  owners8[, 13:22] <- sapply(owners8[, 13:22],as.numeric)\
\
  owners7<-subset(owners, owners$Owner7!="" & owners$Percent7=="" & owners$Owner8=="")\
  owners7[ , 13:19]<- 100/7\
  owners7[, 13:22] <- sapply(owners7[, 13:22],as.numeric)\
\
  owners6<-subset(owners, owners$Owner6!="" & owners$Percent6=="" & owners$Owner7=="")\
  owners6[ , 13:18]<- 100/6\
  owners6[, 13:22] <- sapply(owners6[, 13:22],as.numeric)\
\
  owners5<-subset(owners, owners$Owner5!="" & owners$Percent5=="" & owners$Owner6=="")\
  owners5[ , 13:17]<- 100/5\
  owners5[, 13:22] <- sapply(owners5[, 13:22],as.numeric)\
\
  owners4<-subset(owners, owners$Owner4!="" & owners$Percent4=="" & owners$Owner5=="")\
  owners4[ , 13:16]<- 100/4\
  owners4[, 13:22] <- sapply(owners4[, 13:22],as.numeric)\
\
  owners3<-subset(owners, owners$Owner3!="" & owners$Percent3=="" & owners$Owner4=="")\
  owners3[ , 13:15]<- 100/3\
  owners3[, 13:22] <- sapply(owners3[, 13:22],as.numeric)\
\
  owners2<-subset(owners, owners$Owner2!="" & owners$Percent2=="" & owners$Owner3=="")\
  owners2[ , 13:14]<- 100/2\
  owners2[, 13:22] <- sapply(owners2[, 13:22],as.numeric)\
\
  owners1<-subset(owners, owners$Owner1!="" & owners$Percent1=="" & owners$Owner2=="")\
  owners1[ , 13]<- 100/1\
  owners1[, 13:22] <- sapply(owners1[, 13:22],as.numeric)\
\
  ownersall <- rbind (owners1,owners2,owners3,owners4,owners5,owners6,owners7,owners8,owners9,owners10)\
  ownersall[is.na(ownersall)] <- 0\
  ownersall[, 13:22] <- sapply(ownersall[, 13:22],as.numeric)\
\
  new10<-subset(owners, owners$Owner10!="" & owners$Percent10!="")\
  new9<-subset(owners, owners$Owner9!="" & owners$Percent9!="" & owners$Owner10=="")\
  new8<-subset(owners, owners$Owner8!="" & owners$Percent8!="" & owners$Owner9=="")\
  new7<-subset(owners, owners$Owner7!="" & owners$Percent7!="" & owners$Owner8=="")\
  new6<-subset(owners, owners$Owner6!="" & owners$Percent6!="" & owners$Owner7=="")\
  new5<-subset(owners, owners$Owner5!="" & owners$Percent5!="" & owners$Owner6=="")\
  new4<-subset(owners, owners$Owner4!="" & owners$Percent4!="" & owners$Owner5=="")\
  new3<-subset(owners, owners$Owner3!="" & owners$Percent3!="" & owners$Owner4=="")\
  new2<-subset(owners, owners$Owner2!="" & owners$Percent2!="" & owners$Owner3=="")\
  new1<-subset(owners, owners$Owner1!="" & owners$Percent1!="" & owners$Owner2=="")\
\
  ownersall2 <- rbind (new1,new2,new3,new4,new5,new6,new7,new8,new9,new10)\
  ownersall2[, 13:22] <- sapply(ownersall2[, 13:22],as.numeric)\
  ownersall <- rbind(ownersall, ownersall2) \
\
  per1 <- ownersall[c(2,23,24,3,13)]\
  names(per1)[4]<-"Owner"\
  names(per1)[5]<-"Percent"\
  per2 <- ownersall[c(2,23,24,4,14)]\
  names(per2)[4]<-"Owner"\
  names(per2)[5]<-"Percent"\
  per3 <- ownersall[c(2,23,24,5,15)]\
  names(per3)[4]<-"Owner"\
  names(per3)[5]<-"Percent"\
  per4 <- ownersall[c(2,23,24,6,16)]\
  names(per4)[4]<-"Owner"\
  names(per4)[5]<-"Percent"\
  per5 <- ownersall[c(2,23,24,7,17)]\
  names(per5)[4]<-"Owner"\
  names(per5)[5]<-"Percent"\
  per6 <- ownersall[c(2,23,24,8,18)]\
  names(per6)[4]<-"Owner"\
  names(per6)[5]<-"Percent"\
  per7 <- ownersall[c(2,23,24,9,19)]\
  names(per7)[4]<-"Owner"\
  names(per7)[5]<-"Percent"\
  per8 <- ownersall[c(2,23,24,10,20)]\
  names(per8)[4]<-"Owner"\
  names(per8)[5]<-"Percent"\
  per9 <- ownersall[c(2,23,24,11,21)]\
  names(per9)[4]<-"Owner"\
  names(per9)[5]<-"Percent"\
  per10 <- ownersall[c(2,23,24,12,22)]\
  names(per10)[4]<-"Owner"\
  names(per10)[5]<-"Percent"\
\
  perall <- rbind (per1,per2,per3,per4,per5,per6,per7,per8,per9,per10)\
\
  perall$CurrentCap <- as.numeric(perall$CurrentCap)\
  perall$PropCap<- as.numeric(perall$PropCap)\
  perall$PropCap[is.na(perall$PropCap)] <- 0\
  perall$CurrentCap[is.na(perall$CurrentCap)] <- 0\
\
  #operating w/out expansion, retired, mothballed\
  term1 <- subset(perall, perall$CurrentCap!=0 & perall$PropCap==0) \
  term1$PercentNew <- term1$Percent/100  \
  term1$mtpa <- term1$PercentNew*term1$CurrentCap\
  term1<-term1[c(1,4,7)]\
\
  #proposed, construction, cancelled, shelved\
  term2 <- subset(perall, perall$PropCap!=0 & perall$CurrentCap==0)\
  term2$PercentNew <- term2$Percent/100  \
  term2$mtpa <- term2$PercentNew*term2$PropCap\
  term2<-term2[c(1,4,7)]\
\
  #proposed expansion\
  term3 <- subset(perall, perall$CurrentCap!=0 & perall$PropCap!=0)\
  term3$PercentNew <- term3$Percent/100\
  term3$mtpa <- term3$PercentNew*term3$PropCap \
  term3$Status="Proposed"\
  term3<-term3[c(1,4,7)]\
\
  #operating w/ expansion\
  term4 <- subset(perall, perall$CurrentCap!=0 & perall$PropCap!=0)\
  term4$PercentNew <- term4$Percent/100  \
  term4$mtpa <- term4$PercentNew*term4$CurrentCap\
  term4<-term4[c(1,4,7)]\
\
  combo<-rbind(term1,term2,term3,term4)\
  combo<-subset(combo, combo$mtpa >= 0.0)\
\
  library(reshape2)\
  perall <- dcast(combo, Owner ~ Status, value.var = "mtpa", fun.aggregate = sum)\
  write.csv(perall,'perallexp.csv')}